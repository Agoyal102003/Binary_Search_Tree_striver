it is the value ahead of the given value when inorder is written.

// Approach 1 -> TC -> O(N) && SC -> O(N)

void inorder(TreeNode* root, vector<int>& ans)
    {
        if(root==NULL)
        {
            return;
        }
        inorder(root->left, ans);
        ans.push_back(root->val);
        inorder(root->right, ans);
    }

    int inorderSuccessor(TreeNode* root, int val)
    {
        vector<int> ans;
        inorder(root, ans);
        for(int i=0; i<ans.size(); i++)
        {
            if(ans[i]==val)
            {
                return ans[i+1];
            }
        }
        return -1;
    }

// Approach 2 -> 
we can find a val greater than val basically we can find ceil but it should not be equal to val
